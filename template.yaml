AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  Lambda function code to index files in S3 buckets by creating filehandles
  on Synapse, triggered by file changes to S3."

Metadata:
  AWS::ServerlessRepo::Application:
    Name: "s3-synapse-sync"
    Description: >-
      Lambda function code to index files in S3 buckets by creating filehandles
      on Synapse, triggered by file changes to S3."
    Author: "Sage-Bionetworks"
    SpdxLicenseId: "Apache-2.0"
    LicenseUrl: "LICENSE"
    ReadmeUrl: "README.md"
    Labels: ["serverless", "synapse", "storage", "S3"]
    HomePageUrl: "https://github.com/Sage-Bionetworks/s3-synapse-sync"
    SemanticVersion: "0.0.1"
    SourceCodeUrl: "https://github.com/Sage-Bionetworks-IT/s3-synapse-sync/tree/0.0.1"

Parameters:
  BucketVariables:
    Description: 'String mapping buckets to Synapse project IDs'
    Type: String
  KmsDecryptPolicyArn:
    Description: 'The KMS key policy ARN to access the Synapse service user secrets'
    Type: String
  BucketNamePrefix:
    Description: 'Prefix of buckets accessed by the lambda'
    Type: String
  SynapseCanonicalId:
    Type: String
    Description: The Synapse AWS account canonical ID
    Default: "d9df08ac799f2859d42a588b415111314cf66d0ffd072195f33b921db966b440"
    ConstraintDescription: >-
      Must be the canonical ID for the AWS Synapse account

Resources:
  S3SynapseLambdaExecute:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
            - logs:*
          Resource: arn:aws:logs:*:*:*
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:PutObjectAcl
          Resource: !Sub "arn:aws:s3:::${BucketNamePrefix}/*"

  SSMParameterStore:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
           - ssm:DescribeParameters
          Resource: "*"
        - Effect: Allow
          Action:
            - ssm:GetParameters
            - ssm:GetParameter
          Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/HTAN/SynapseSync/*"

  Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3_synapse_sync/
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      Role: !GetAtt FunctionRole.Arn
      Environment:
        Variables:
          BUCKET_VARIABLES: !Ref BucketVariables
          SYNAPSE_CANONICAL_ID: !Ref SynapseCanonicalId
      Timeout: 900
      MemorySize: 320

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref SSMParameterStore
        - !Ref S3SynapseLambdaExecute
        - !Ref KmsDecryptPolicyArn

Outputs:
  FunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt Function.Arn
  FunctionRoleArn:
    Description: "Lambda function role ARN"
    Value: !GetAtt FunctionRole.Arn
